FROM php:8.3-cli-alpine3.18

WORKDIR /app

# 1. Install required dependencies
RUN apk update && apk add --no-cache \
    autoconf \
    make \
    g++ \
    gnupg \
    unixodbc-dev \
    linux-headers \
    nodejs \
    npm

# 2. Install SQL Server ODBC drivers and tools
RUN curl -O https://download.microsoft.com/download/b/9/f/b9f3cce4-3925-46d4-9f46-da08869c6486/msodbcsql18_18.0.1.1-1_amd64.apk
RUN curl -O https://download.microsoft.com/download/b/9/f/b9f3cce4-3925-46d4-9f46-da08869c6486/mssql-tools18_18.0.1.1-1_amd64.apk

RUN curl -O https://download.microsoft.com/download/b/9/f/b9f3cce4-3925-46d4-9f46-da08869c6486/msodbcsql18_18.0.1.1-1_amd64.sig
RUN curl -O https://download.microsoft.com/download/b/9/f/b9f3cce4-3925-46d4-9f46-da08869c6486/mssql-tools18_18.0.1.1-1_amd64.sig

RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --import -
RUN gpg --verify msodbcsql18_18.0.1.1-1_amd64.sig msodbcsql18_18.0.1.1-1_amd64.apk
RUN gpg --verify mssql-tools18_18.0.1.1-1_amd64.sig mssql-tools18_18.0.1.1-1_amd64.apk

RUN yes | apk add --allow-untrusted msodbcsql18_18.0.1.1-1_amd64.apk
RUN yes | apk add --allow-untrusted mssql-tools18_18.0.1.1-1_amd64.apk

# 3. Set php.ini (to development settings)
RUN cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini
RUN pecl config-set php_ini /usr/local/etc/php/php.ini

# 4. Install PHP drivers for PDO SQLSRV
RUN pecl install pdo_sqlsrv
RUN docker-php-ext-enable pdo_sqlsrv

# 5. Install PHP debugger
RUN pecl install xdebug
RUN docker-php-ext-enable xdebug

COPY "./setup/xdebug.ini" "/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini"

# 6. Install Webpack and Webpack CLI
RUN npm install -g webpack webpack-cli

# 7. Copy package.json and package-lock.json
COPY ./app/package*.json /app/

# Verify that package.json exists
RUN ls -la /app/

# 8. Install NPM dependencies
RUN npm install

# 9. Copy rest of the project files
COPY ./app /app

# Command to start the web server
CMD ["php", "-S", "0.0.0.0:80", "-t", "/app"]
